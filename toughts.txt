todo;
DONE!!! tag imod input argumenter

instantiere model
        - i virkeligheden vil data hentes fra en database, jeg vil gerne komme
          så tæt på dette som muligt? Nedarvning? if/else kæde?
        - Hvordan laver jeg en god constructor? Dynamisk klass instantiering?
          https://jenkov.com/tutorials/java-reflection/dynamic-class-loading-reloading.html#classloader

kald cost converter
        - Hvordan laver jeg local vs global cost på en god måde?

Til sidst; print output


// struktur:
// Main -> Sender indput videre til constconverter
// Converter -> laver en masse logik, slår korrekt model op, kan beregne pris ud fra oplysninger fra Main
// Model -> diverse modeller, deres cost
// læs her: https://www.geeksforgeeks.org/java-design-patterns/#1-creational-design-patterns-in-java

Task 1:

implement a component module
    - takes time, money and model id as input
    - returns total cost rounded off
        to the nearest whole number

    - total cost = time * timeFactor + money

    - implement a global timeFactor (use if no local timeFactor exist)
    - implement a local timeFactor

Requirements:
    -   launchable from command line
        e,g java -jar costconverter.jar <time> <money> <model id>

    - time = minutes
    - money  = cost in [valuta]
    - model = identifier of the model




Spørgsmål til opgaven?

Ønsker i også at se unittest?

hvad vil det sige at det skal være et resuable component?
    - https://dzone.com/articles/reusable-components-in-java
    - https://medium.com/@muzammilbintauseef/mastering-efficiency-a-guide-on-how-to-write-reusable-java-code-92dd2459ccc4

hvordan designes det High quality? Maintainable?
    - https://medium.com/swlh/writing-readable-and-maintainable-code-java-8c0adc2f5930

hvordan laver jeg det modulært?
    - https://stackoverflow.com/questions/1444221/how-to-make-code-modular


Hvad er -jar command for noget?
    - Det bruges til at køre en JAR fil (java package essentially)
    - Hvordan laver og kører jeg <file>.jar ? (EXPLORER -> JAVA projects -> export to JAR )
        https://www.youtube.com/watch?v=AV-ZdQawZDM


